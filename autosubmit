#!/bin/bash

scriptName=`basename $0`
sleepTime=60


function print_usage {
    echo "Usage: $scriptName <submit cmd> <validation file> <validation string>"    
}

function print_message {
    echo -e "$1"
}

function print_error {
    print_message "$1"
    exit 1
}

# Check arguments
if (( $# == 1 )); then

    if [[ $1 == "-h" ]]; then
	print_usage 
	exit 0
    else
	print_usage
	exit 1
    fi

elif (( $# != 3 )); then
	
    print_usage
    exit 1
    
else

    jobSubmitCmd="$1"
    jobCheckFile="$2"
    jobCheckString="$3"

fi
# job directory is assigned to the current one
jobDir=`pwd`

# Set autoruns and status files
autoRunsFile="${jobDir}/autoruns"
statusFile="${jobDir}/.status"

# Check if things have been cleaned up from a previous Read the status file in the job directory
[ -f ${statusFile} ] &&
print_error "Previous status file found in job directory. Check that previous jobs are complete and remove:\n${statusFile}"

# Initialize the status file
echo 0 > "${statusFile}"
jobNumber=0

istop=0
while (( $istop == 0 ))
do
    # Read the status file in the job directory
    [ ! -f ${statusFile} ] && print_error "File 'status' is missing from job directory. Terminating!"

    # Read current job status
    status=`cat ${statusFile}`

    if (( $status == 0 )); then

        # Attept to start new case
	# The the number of runs left
	autoRuns=`cat ${autoRunsFile}`

	if (( $autoRuns > 0 )); then 

	    # If the validation file exists check it
	    if [ -f ${jobDir}/${jobCheckFile} ]; then
		
		# For now just seeing if the whole word of the validation string is found. 
		# This should be unique to successful runs
		jobStringSearch=`grep -w "$jobCheckString" ${jobDir}/${jobCheckFile}` 
		if [ -z "$jobStringSearch" ]; then

		    # Job check string not found
		    # Clean up and exit
		    rm -f ${statusFile}
		    print_error "Previous job not completed correctly - Terminating!"

		fi

	    else
	    
		print_message "${jobDir}/${jobCheckFile} not found - assuming initial submission"

	    fi

	    cd ${jobDir}

	    # Update the job number and remaining runs
	    jobNumber=`expr $jobNumber + 1`
	    autoRuns=`expr $autoRuns - 1`
	    echo $autoRuns > $autoRunsFile
	    echo 1 > ${statusFile}

	    print_message "Submitting job ${jobNumber}"
	    ${jobSubmitCmd}

	else

	    # Cleanup
	    rm -f ${statusFile}
	    print_message "All jobs completed"
	    exit 0

	fi

    fi

    sleep ${sleepTime}

done

exit 0
